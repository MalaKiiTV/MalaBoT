--- a/cogs/xp.py
+++ b/cogs/xp.py
@@ -405,9 +405,11 @@ class XP(commands.Cog):
        
        @app_commands.command(name="xpreset", description="Reset user XP to 0 (Server Owner only)")
        @app_commands.describe(
-           user="User to reset XP for"
+           user="User to reset XP for (leave empty to reset ALL users)",
+           confirm="Type 'yes' to confirm resetting ALL users (only needed for all reset)"
        )
-       async def xpreset(self, interaction: discord.Interaction, user: discord.Member):
+       async def xpreset(self, interaction: discord.Interaction, user: discord.Member = None, confirm: str = None):
            """Reset user XP to 0."""
            try:
                # Check server owner permissions
@@ -419,7 +421,13 @@ class XP(commands.Cog):
                    await interaction.response.send_message(embed=embed, ephemeral=True)
                    return
                
-               await self._xpadmin_reset(interaction, user)
+               # If user is specified, reset single user
+               if user:
+                   await self._xpadmin_reset(interaction, user)
+               else:
+                   # Reset all users
+                   await self._xpadmin_reset_all(interaction, confirm)
            except Exception as e:
                self.logger.error(f"Error in xpreset command: {e}")
                await self._error_response(interaction, "Failed to reset XP")
@@ -537,6 +545,48 @@ class XP(commands.Cog):
            except Exception as e:
                self.logger.error(f"Error resetting XP: {e}")
                await self._error_response(interaction, "Failed to reset XP")
+       
+       async def _xpadmin_reset_all(self, interaction: discord.Interaction, confirm: str = None):
+           """Reset ALL users' XP and levels."""
+           try:
+               # Require confirmation
+               if confirm != "yes":
+                   embed = embed_helper.warning_embed(
+                       title="⚠️ Confirmation Required",
+                       description=(
+                           "This will reset **ALL users'** XP and levels to 0!\n\n"
+                           "To confirm, run:\n"
+                           "`/xpreset confirm:yes`\n\n"
+                           "**This action cannot be undone!**"
+                       )
+                   )
+                   await interaction.response.send_message(embed=embed, ephemeral=True)
+                   return
+               
+               # Defer the response as this might take a while
+               await interaction.response.defer(ephemeral=True)
+               
+               # Get all users with XP
+               conn = await self.bot.db_manager.get_connection()
+               cursor = await conn.execute(
+                   "SELECT user_id FROM users WHERE xp > 0"
+               )
+               users = await cursor.fetchall()
+               
+               # Reset each user
+               reset_count = 0
+               for user_row in users:
+                   user_id = user_row[0]
+                   await self.bot.db_manager.reset_user_xp(user_id)
+                   reset_count += 1
+               
+               embed = embed_helper.success_embed(
+                   title="✅ All XP Reset",
+                   description=f"Successfully reset XP for **{reset_count}** users to 0"
+               )
+               await interaction.followup.send(embed=embed, ephemeral=True)
+               
+               self.logger.info(f"Admin {interaction.user.name} reset ALL users' XP ({reset_count} users)")
+               
+           except Exception as e:
+               self.logger.error(f"Error resetting all XP: {e}")
+               await self._error_response(interaction, "Failed to reset all XP")
        
    
        # xpconfig command removed - use /setup instead